#Data was provided by Break Into Tech course, from Kaggle.

#Data table created to hold CSV import:

CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness decimal(8,7) NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )

#CSV file was then inserted into the table and the following queries were run to analyze the data provided.

--Gain an overview of the data in the table.
SELECT * 
FROM BIT_DB.Spotifydata;

--How many hits does each artist have on the Top 50 list?
SELECT artist_name, COUNT(track_name)
FROM BIT_DB.Spotifydata
GROUP BY artist_name;

--What are the average dancibility and liveness by artist?
SELECT artist_name, AVG(danceability) as avg_dance, AVG(liveness) as avg_live
FROM BIT_DB.Spotifydata 
GROUP BY artist_name
ORDER BY AVG(danceability) DESC;

--Who are the top ten artist based on popularity rating?
SELECT distinct artist_name, ROUND(AVG(popularity))as pop_rating
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY popularity DESC
LIMIT 10;

--What artist has released the longest song?
SELECT artist_name, track_name, MAX(duration_ms)
FROM BIT_DB.Spotifydata;

--What is the average tempo for the top ten hits?
SELECT AVG(tempo) as top_ten_avg_tempo
FROM BIT_DB.Spotifydata
WHERE id >= 1
AND id <= 10;
